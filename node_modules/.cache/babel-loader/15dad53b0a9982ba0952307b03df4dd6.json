{"ast":null,"code":"// import { applyMiddleware, combineReducers, createStore } from 'redux';\n// import createSagaMiddleware from 'redux-saga';\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport infoReducer from './infoReducer';\nimport postReducer from './postReducer';\nimport homeReducer from './homeReducer';\nimport rootSaga from './rootSaga';\nimport serviceReducer from './serviceReducer';\nconst sagaMiddleware = createSagaMiddleware();\nconst reducer = combineReducers({\n  service: serviceReducer,\n  posts: postReducer,\n  info: infoReducer,\n  home: homeReducer\n});\nconst store = createStore(reducer, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);\nstore.dispatch({\n  type: 'FETCH_SERVICE_DATA'\n});\nstore.dispatch({\n  type: 'FETCH_INFO_DATA'\n});\nstore.dispatch({\n  type: 'FETCH_POSTS_DATA'\n});\nstore.dispatch({\n  type: 'FETCH_HOME_DATA'\n});\nexport default store;","map":{"version":3,"names":["applyMiddleware","combineReducers","createStore","createSagaMiddleware","infoReducer","postReducer","homeReducer","rootSaga","serviceReducer","sagaMiddleware","reducer","service","posts","info","home","store","run","dispatch","type"],"sources":["/Users/bimax/Desktop/client/src/store/index.js"],"sourcesContent":["// import { applyMiddleware, combineReducers, createStore } from 'redux';\n// import createSagaMiddleware from 'redux-saga';\n\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport infoReducer from './infoReducer';\nimport postReducer from './postReducer';\nimport homeReducer from './homeReducer';\n\nimport rootSaga from './rootSaga';\nimport serviceReducer from './serviceReducer';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst reducer = combineReducers({\n    service: serviceReducer,\n    posts: postReducer,\n    info: infoReducer,\n    home: homeReducer,\n});\nconst store = createStore(\n    reducer,\n    applyMiddleware(sagaMiddleware)\n);\n\nsagaMiddleware.run(rootSaga);\n\nstore.dispatch({\n    type: 'FETCH_SERVICE_DATA',\n});\n\nstore.dispatch({\n    type: 'FETCH_INFO_DATA',\n});\nstore.dispatch({\n    type: 'FETCH_POSTS_DATA',\n});\nstore.dispatch({\n    type: 'FETCH_HOME_DATA',\n});\n\nexport default store;"],"mappings":"AAAA;AACA;AAEA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,WAA3C,QAA8D,OAA9D;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,MAAMC,cAAc,GAAGN,oBAAoB,EAA3C;AACA,MAAMO,OAAO,GAAGT,eAAe,CAAC;EAC5BU,OAAO,EAAEH,cADmB;EAE5BI,KAAK,EAAEP,WAFqB;EAG5BQ,IAAI,EAAET,WAHsB;EAI5BU,IAAI,EAAER;AAJsB,CAAD,CAA/B;AAMA,MAAMS,KAAK,GAAGb,WAAW,CACrBQ,OADqB,EAErBV,eAAe,CAACS,cAAD,CAFM,CAAzB;AAKAA,cAAc,CAACO,GAAf,CAAmBT,QAAnB;AAEAQ,KAAK,CAACE,QAAN,CAAe;EACXC,IAAI,EAAE;AADK,CAAf;AAIAH,KAAK,CAACE,QAAN,CAAe;EACXC,IAAI,EAAE;AADK,CAAf;AAGAH,KAAK,CAACE,QAAN,CAAe;EACXC,IAAI,EAAE;AADK,CAAf;AAGAH,KAAK,CAACE,QAAN,CAAe;EACXC,IAAI,EAAE;AADK,CAAf;AAIA,eAAeH,KAAf"},"metadata":{},"sourceType":"module"}